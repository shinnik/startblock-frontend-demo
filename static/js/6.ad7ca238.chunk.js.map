{"version":3,"sources":["lib/containers/InputPair/InputPair.module.scss","lib/containers/RadioButtonsGroup/RadioButtonsGroup.module.scss","lib/pages/SettingsPage/SettingsPage.module.scss","lib/containers/ServiceBox/ServiceBox.module.scss","lib/containers/DndList/DndList.module.scss","lib/components/Icon/icons/Priority.svg","lib/containers/ManagedLoadSpecific/ManagedLoadSpecific.module.scss","lib/containers/InputPair/InputPair.js","lib/containers/RadioButtonsGroup/RadioButtonsGroup.js","lib/containers/ParametersBlock/ParametersBlock.js","lib/constants/texts.js","lib/containers/ServiceBox/ServiceBox.js","lib/containers/DndList/DndList.js","lib/containers/ManagedLoadSpecific/ManagedLoadSpecific.js","lib/pages/SettingsPage/SettingsPage.js","store/actions/settingsPage.js"],"names":["module","exports","cost","Container","block","page","box","box__load--active","box__load--inactive","box__p2p--active","box__p2p--inactive","box__balance--active","box__balance--inactive","box__header","textbox","textbox--active","textbox--inactive","item__container","item__icon","item__textfield","__webpack_require__","p","Arrow","LabelContainer","text1","text2","useStyles","makeStyles","theme","name","marginRight","width","fontFamily","typography","outlineColor","ip","power","cap","InputPair","_ref","first","second","onTyping","classes","react_default","a","createElement","TextField_default","value","get","InputLabelProps","shrink","margin","variant","label","onInput","event","target","className","InputProps","root","styles","endAdornment","InputAdornment_default","position","onChange","input","WhiteRadio","withStyles","color","&$checked","&:hover","backgroundColor","checked","props","Radio","Object","assign","fontSize","lineHeight","letterSpacing","RadioButtonsGroup","currentValue","radios","FormControl","component","RadioGroup","aria-label","toString","e","column","map","radio","index","toJS","FormControlLabel","key","control","disableRipple","labelPlacement","ParametersBlock","current","Fragment","Typography_default","style","fontWeight","gutterBottom","InputPair_InputPair","getIn","texts","load","header","textActive","textInactive","p2p","balance","StyledSwitch","switchBase","&$checked + $track","opacity","track","Switch","ServiceBox","active","_ref$render","render","onToggle","boxClasses","classNames","defineProperty","concat","textBlockClasses","DndList","items","onReorder","handlerClasses","react_beautiful_dnd_esm","onDragEnd","result","destination","newItems","list","startIndex","endIndex","replacing","splice","reorder","source","droppableId","provided","snapshot","droppableProps","ref","innerRef","item","draggableId","draggableProps","dragHandleProps","id","autoComplete","notchedOutline","placeholder","ManagedLoadSpecific","DndList_DndList","src","arrow","connect","state","mainInputs","settings","currentGeneratorNumber","managedLoad","dispatch","onNameOrIpChange","param","type","actions","payload","onNameAndIpTyping","onGeneratorChoose","selectedValue","selectedGenerator","onParameterChange","onParameterTyping","onToggleLoad","onChangeLoad","onImportancyChange","onReorderList","onRosetteNameChange","console","log","onRosetteNameTyping","onToggleTrade","onChangeTrade","onToggleBalance","onChangeBalance","onStrategyChange","onSelectStrategy","currentGenerator","Typography","ParametersBlock_ParametersBlock","ServiceBox_ServiceBox","ManagedLoadSpecific_ManagedLoadSpecific"],"mappings":"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","file":"static/js/6.ad7ca238.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cost\":\"InputPair_cost__2oq0A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"RadioButtonsGroup_Container__2vUfE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"SettingsPage_block__3ZA8T\",\"page\":\"SettingsPage_page__2JnI0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"ServiceBox_box__1FrWT\",\"box__load--active\":\"ServiceBox_box__load--active__gSVTd\",\"box__load--inactive\":\"ServiceBox_box__load--inactive__2K6A3\",\"box__p2p--active\":\"ServiceBox_box__p2p--active__3ECFU\",\"box__p2p--inactive\":\"ServiceBox_box__p2p--inactive__zo_VF\",\"box__balance--active\":\"ServiceBox_box__balance--active__2wNQ0\",\"box__balance--inactive\":\"ServiceBox_box__balance--inactive__2_Xwg\",\"box__header\":\"ServiceBox_box__header__FkzES\",\"textbox\":\"ServiceBox_textbox__rIG7N\",\"textbox--active\":\"ServiceBox_textbox--active__1bL5R\",\"textbox--inactive\":\"ServiceBox_textbox--inactive__25uGQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item__container\":\"DndList_item__container__tLUC2\",\"item__icon\":\"DndList_item__icon__3RH-A\",\"item__textfield\":\"DndList_item__textfield__3lUI-\"};","module.exports = __webpack_public_path__ + \"static/media/Priority.96d0eea1.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"ManagedLoadSpecific_Container__34fYe\",\"Arrow\":\"ManagedLoadSpecific_Arrow__1HjXb\",\"LabelContainer\":\"ManagedLoadSpecific_LabelContainer__3ASqv\",\"text1\":\"ManagedLoadSpecific_text1__2Sfyl\",\"text2\":\"ManagedLoadSpecific_text2__1sjrn\"};","import React, { useState } from 'react';\nimport _isEmpty from 'lodash/isEmpty';\nimport TextField from \"@material-ui/core/TextField/TextField\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport styles from './InputPair.module.scss';\nimport InputAdornment from \"@material-ui/core/InputAdornment/InputAdornment\";\n\nconst useStyles = makeStyles(theme => ({\n    name: {\n        marginRight: '32px',\n        width: '192px',\n        fontFamily: theme.typography.fontFamily,\n        outlineColor: '#0099DC'\n    },\n    ip: {\n        width: '128px',\n        fontFamily: theme.typography.fontFamily,\n        outlineColor: '#0099DC'\n    },\n    power: {\n        marginRight: '32px',\n        width: '128px'\n    },\n    cost: {\n        width: '256px'\n    },\n    cap: {\n        width: '160px'\n    }\n}))\n\nexport const InputPair = ({ first, second, onTyping }) => {\n    const classes = useStyles();\n    return (\n        <form>\n            { <TextField\n                value={first.get('value')}\n                InputLabelProps={{\n                    shrink: true,\n                }}\n                margin='normal'\n                variant='outlined'\n                label={first.get('label')}\n                onInput={(event) => onTyping('0', event.target.value)}\n                className={classes[first.get('id')]}\n                InputProps={{classes: { root: styles['textfield-input-custom'] }, endAdornment: <InputAdornment position=\"end\">{first.get('units')}</InputAdornment>}}\n            /> }\n            { <TextField\n                value={second.get('value')}\n                InputLabelProps={{\n                    shrink: true,\n                }}\n                label={second.get('label')}\n                margin='normal'\n                variant='outlined'\n                onChange={(event) => onTyping('1', event.target.value)}\n                className={classes[second.get('id')]}\n                InputProps={{ classes: { input: styles[second.get('id')] }, endAdornment: <InputAdornment position=\"end\">{second.get('units')}</InputAdornment>}}\n            /> }\n\n        </form>\n    )\n}\n","import React, { useMemo } from 'react';\nimport Radio from '@material-ui/core/Radio';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport styles from './RadioButtonsGroup.module.scss';\n\nconst WhiteRadio = withStyles({\n    root: {\n        color: '#FFFFFF',\n        '&$checked': {\n            color: '#FFFFFF',\n        },\n        '&:hover': {\n            backgroundColor: 'transparent'\n        }\n    },\n    checked: {}\n})(props => <Radio color=\"default\" {...props} />);\n\nconst useStyles = makeStyles(theme => ({\n    label: {\n        fontFamily: theme.typography.fontFamily,\n        fontSize: '16px',\n        lineHeight: '24px',\n        letterSpacing: '0.44px',\n    }\n}))\n\nexport default function RadioButtonsGroup({ onChange, currentValue, radios }) {\n\n    const classes = useStyles();\n\n    return (\n        <div className={styles.Container}>\n            <FormControl component=\"fieldset\">\n                <RadioGroup aria-label=\"position\"\n                            name=\"position\"\n                            value={currentValue.toString()}\n                            onChange={(e) => onChange(e.target.value)}\n                            column=\"true\">\n                    { radios.map((radio, index) => {\n                        const label = typeof radio.get('label') === 'string' ? radio.get('label') : radio.get('label').toJS();\n                        return (\n                            <FormControlLabel\n                            key={radio.get('label')}\n                            value={index.toString()}\n                            control={radio.get('color') !== 'white' ? <Radio key={index} color=\"default\" disableRipple />\n                                : <WhiteRadio key={index} disableRipple/>}\n                            label={label}\n                            labelPlacement=\"end\"\n                            className={classes.label}\n                            />\n                        )\n                    }) }\n                </RadioGroup>\n            </FormControl>\n        </div>\n    );\n}\n","import React from 'react';\nimport { InputPair } from \"../../containers/InputPair/InputPair\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\n\nexport const ParametersBlock = ({ onTyping, current }) => {\n    return (\n        <>\n            {current.get('inputTypes') && (\n                <>\n                    <Typography style={{fontWeight: 600}}\n                                variant=\"h5\"\n                                component=\"h2\"\n                                gutterBottom>\n                        {current.get('header')}\n                    </Typography>\n                    <InputPair onTyping={onTyping} first={current.getIn(['inputTypes', '0'])}\n                               second={current.getIn(['inputTypes', '1'])}/>\n                </>\n            )}\n\n        </>\n    )\n}\n","export const texts = {\n    load: {\n        header: 'Управляемая нагрузка',\n        textActive: 'Чтобы сэкономить, умные розетки будут выключаться при\\n' +\n            'подорожании энергии. Перетащите наверх списка те, что\\n должны отключаться реже:',\n        textInactive: 'Чтобы сэкономить, умные розетки будут выключаться при подорожании энергии.'\n    },\n    p2p: {\n        header: 'P2P торговля энергией',\n        textActive: 'TODO\\nНаписать пояснение',\n        textInactive: 'TODO\\nНаписать пояснение'\n    },\n    balance: {\n        header: 'Баланс спроса и предложения',\n        textActive: 'TODO\\nНаписать пояснение',\n        textInactive: 'TODO\\nНаписать пояснение'\n    }\n};","import React from 'react';\nimport classNames from 'classnames';\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Switch from \"@material-ui/core/Switch/Switch\";\nimport { texts } from '../../constants/texts'\nimport styles from './ServiceBox.module.scss'\n\nconst StyledSwitch = withStyles({\n    switchBase: {\n        backgroundColor: 'transparent !important',\n        '&$checked': {\n            color: '#FFF',\n        },\n        '&$checked + $track': {\n            backgroundColor: '#FFF',\n            opacity: 0.25\n        }\n    },\n    checked: {},\n    track: { backgroundColor: 'rgba(34, 31, 31, 0.26)', opacity: 1 },\n})(Switch);\n\nexport const ServiceBox = ({ variant, active, render = null, onToggle }) => {\n\n    const boxClasses = classNames(\n        {[styles[`box__${variant}--active`]]: active === true},\n        {[styles[`box__${variant}--inactive`]]: active === false},\n        styles[`box__${variant}`],\n        styles['box']\n    );\n\n    const textBlockClasses = classNames(\n        {[styles[`textbox--active`]]: active === true},\n        {[styles[`textbox--inactive`]]: active === false},\n        styles['textbox']\n    )\n\n    return (\n        <>\n            { variant &&\n                <div className={boxClasses}>\n                    <div className={ styles[`box__header`] }>\n                        <StyledSwitch checked={ active }\n                                      onChange={ () => onToggle(!active) }\n                                      disableRipple/>\n                        <Typography style={{ fontWeight: 500, color: '#FFF' }}\n                                    variant=\"h5\"\n                                    component=\"h2\"\n                                    >\n                            { texts[variant].header }\n                        </Typography>\n                    </div>\n                    <div className={textBlockClasses}>\n                        <Typography variant=\"body2\">\n                            { texts[variant][`text${active ? 'Active' : 'Inactive'}`]}\n                        </Typography>\n                    </div>\n                    { variant === 'load' && active && render() }\n                    { variant === 'p2p' && active && render() }\n                </div>\n             }\n        </>\n    )\n}\n","import React, { useState } from \"react\";\nimport classNames from 'classnames';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport TextField from \"@material-ui/core/TextField/TextField\";\n\nimport styles from \"./DndList.module.scss\";\n\nconst reorder = (list, startIndex, endIndex) => {\n    const replacing = list.get(startIndex);\n    const removed = list.splice(startIndex, 1);\n\n    return removed.splice(endIndex, 0, replacing);\n};\n\nexport const DndList = ({ items, onReorder, onChange }) => {\n\n    const handlerClasses = classNames(\n        \"material-icons\",\n        styles['item__icon']\n    );\n\n    const onDragEnd = result => {\n        if (!result.destination) {\n            return;\n        }\n        const newItems = reorder(\n            items,\n            result.source.index,\n            result.destination.index\n        );\n        onReorder(newItems);\n    };\n\n    return (\n        <DragDropContext onDragEnd={onDragEnd}>\n            <Droppable droppableId=\"droppable\">\n                {(provided, snapshot) => (\n                    <div\n                        {...provided.droppableProps}\n                        ref={provided.innerRef}\n                    >\n                        {items.map((item, index) => (\n                            <Draggable key={item.get('id')} draggableId={item.get('id')} index={index}>\n                                {(provided, snapshot) => (\n                                    <div className={styles['item__container']} ref={provided.innerRef} {...provided.draggableProps}>\n                                        <i className={handlerClasses} {...provided.dragHandleProps}>drag_indicator</i>\n                                        <TextField\n                                            id={item.get('id')}\n                                            label={`Название розетки №${item.get('id')}`}\n                                            margin='normal'\n                                            variant='outlined'\n                                            value={item.get('name')}\n                                            autoComplete='off'\n                                            onChange={(e) => onChange(item.get('id'), e.target.value)}\n                                            className={styles['item__textfield']}\n                                            InputProps={{ classes: {notchedOutline: styles['item__textfield'],\n                                                    root: styles['item__textfield']} }}\n                                            InputLabelProps={{ classes: { root: styles['item__textfield'] }, shrink: true }}\n                                        />\n                                    </div>\n                                )}\n                            </Draggable>\n                        ))}\n                        {provided.placeholder}\n                    </div>\n                )}\n            </Droppable>\n        </DragDropContext>\n    );\n};\n","import React from 'react';\nimport {DndList} from \"../DndList/DndList\";\nimport arrow from '../../components/Icon/icons/Priority.svg'\n\nimport styles from './ManagedLoadSpecific.module.scss'\n\nexport const ManagedLoadSpecific = ({ items, onReorder, onChange }) => {\n\n    return (\n        <div className={styles['Container']}>\n            <DndList items={items}\n                     onReorder={onReorder}\n                     onChange={onChange}/>\n            <img src={arrow} className={styles.Arrow}/>\n            <div className={styles['LabelContainer']}>\n                <div className={styles['text1']}>Нельзя отключать</div>\n                <div className={styles['text2']}>Можно отключать</div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Typography from '@material-ui/core/Typography';\nimport { InputPair } from \"../../containers/InputPair/InputPair\";\nimport RadioButtonsGroup from '../../containers/RadioButtonsGroup/RadioButtonsGroup'\n\nimport styles from './SettingsPage.module.scss'\nimport { ParametersBlock }from \"../../containers/ParametersBlock/ParametersBlock\";\nimport { ServiceBox } from \"../../containers/ServiceBox/ServiceBox\";\nimport {\n    onGeneratorSelect,\n    onParameterTyping,\n    onNameAndIpTyping,\n    onSelectStrategy,\n    onChangeBalance,\n    onChangeTrade,\n    onChangeLoad,\n    onReorderList,\n    onRosetteNameTyping\n} from \"../../../store/actions/settingsPage\";\nimport { ManagedLoadSpecific } from \"../../containers/ManagedLoadSpecific/ManagedLoadSpecific\";\n\nconst SettingsPage = (\n    { currentGeneratorNumber,\n        radios,\n        onGeneratorChoose,\n        onParameterChange,\n        mainInputs,\n        onNameOrIpChange,\n        p2p,\n        onStrategyChange,\n        managedLoad,\n        balance,\n        onToggleTrade,\n        onToggleBalance,\n        onToggleLoad,\n        onImportancyChange,\n        onRosetteNameChange}) => {\n    const currentGenerator = radios.get(currentGeneratorNumber);\n    return (\n        <div className={styles.page}>\n            <div className={styles.block}>\n                <Typography style={{fontWeight: 600}}\n                            variant=\"h4\"\n                            gutterBottom>\n                    Настройка энергетической ячейки\n                </Typography>\n                <InputPair first={mainInputs.get(0)}\n                           second={mainInputs.get(1)}\n                           onTyping={onNameOrIpChange}/>\n            </div>\n            <div className={styles.block}>\n                <Typography style={{fontWeight: 600}}\n                            variant=\"h5\"\n                            gutterBottom>\n                    Подключенные генераторы и накопители\n                </Typography>\n                <RadioButtonsGroup radios={radios}\n                                   currentValue={currentGeneratorNumber}\n                                   onChange={onGeneratorChoose} />\n            </div>\n           { currentGeneratorNumber !== 0 &&\n           <div className={styles.block}>\n                <ParametersBlock onTyping={onParameterChange}\n                                 current={currentGenerator}/>\n            </div> }\n            <div className={styles.block}>\n                <Typography style={{fontWeight: 600}}\n                            variant=\"h5\"\n                            component=\"h2\"\n                            gutterBottom>\n                    Сервисы\n                </Typography>\n                <ServiceBox variant='load'\n                            active={managedLoad.get('status')}\n                            onToggle={onToggleLoad}\n                            render={() => <ManagedLoadSpecific items={managedLoad.get('items')}\n                                                               onReorder={onImportancyChange}\n                                                               onChange={onRosetteNameChange}/> }/>\n                <ServiceBox variant='p2p'\n                            active={p2p.get('status')}\n                            render={() => <RadioButtonsGroup onChange={onStrategyChange}\n                                                             currentValue={p2p.get('current')}\n                                                             radios={p2p.get('strategies')} />}\n                            onToggle={onToggleTrade}/>\n                <ServiceBox variant='balance'\n                            active={balance.get('status')}\n                            onToggle={onToggleBalance}/>\n            </div>\n        </div>\n    )\n};\n\nconst mapStateToProps = state => {\n    return ({\n        mainInputs: state.settings.get('mains'),\n        currentGeneratorNumber: state.settings.get('currentGeneratorNumber'),\n        radios: state.settings.get('radios'),\n        managedLoad: state.settings.get('managedLoad'),\n        p2p: state.settings.get('p2p'),\n        balance: state.settings.get('balance')\n    })\n};\n\nconst mapDispatchToProps = dispatch => {\n    return ({\n        onNameOrIpChange: (param, value) => dispatch(onNameAndIpTyping(param, value)),\n        onGeneratorChoose: (value) => dispatch(onGeneratorSelect(value)),\n        onParameterChange: (param, value) => dispatch(onParameterTyping(param, value)),\n        onToggleLoad: (value) => dispatch(onChangeLoad(value)),\n        onImportancyChange: items => dispatch(onReorderList(items)),\n        onRosetteNameChange: (index, value) => dispatch(onRosetteNameTyping(index, value)),\n        onToggleTrade: value => dispatch(onChangeTrade(value)),\n        onToggleBalance: value => dispatch(onChangeBalance(value)),\n        onStrategyChange: value => dispatch(onSelectStrategy(value))\n\n    })\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingsPage);\n","import * as actions from './actionTypes';\n\nexport const onGeneratorSelect = selectedValue => {\n    return {\n      type: actions.SELECT_RADIO,\n      selectedGenerator: selectedValue\n    }\n};\n\nexport const onParameterTyping = (param, value) => {\n  return {\n    type: actions.CHANGE_PARAMETER_VALUE,\n    payload: { param, value }\n  }\n};\n\nexport const onNameAndIpTyping = (param, value) => {\n  return {\n    type: actions.TYPE_INFO,\n    payload: { param, value }\n  }\n}\n\nexport const onSelectStrategy = value => {\n  return {\n    type: actions.SELECT_STRATEGY,\n      value\n  }\n};\n\nexport const onChangeTrade = value => {\n  return {\n    type: actions.TOGGLE_TRADE,\n      value\n  }\n}\n\nexport const onChangeLoad = value => {\n    return {\n        type: actions.TOGGLE_LOAD,\n        value\n    }\n}\n\nexport const onChangeBalance = value => {\n    return {\n        type: actions.TOGGLE_BALANCE,\n        value\n    }\n}\n\nexport const onReorderList = items => {\n    return {\n        type: actions.CHANGE_IMPORTANCY,\n        items\n    }\n}\n\nexport const onRosetteNameTyping = (id, value) => {\n  console.log(id, value);\n    return {\n        type: actions.CHANGE_ROSETTE_NAME,\n        payload: { id, value }\n    }\n}\n"],"sourceRoot":""}