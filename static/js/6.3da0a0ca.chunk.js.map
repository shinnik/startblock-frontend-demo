{"version":3,"sources":["lib/containers/InputPair/InputPair.module.scss","lib/containers/RadioButtonsGroup/RadioButtonsGroup.module.scss","lib/pages/SettingsPage/SettingsPage.module.scss","lib/containers/ServiceBox/ServiceBox.module.scss","lib/containers/DndList/DndList.module.scss","lib/components/Icon/icons/Priority.svg","lib/containers/ManagedLoadSpecific/ManagedLoadSpecific.module.scss","lib/containers/InputPair/InputPair.js","lib/containers/RadioButtonsGroup/RadioButtonsGroup.js","lib/containers/ParametersBlock/ParametersBlock.js","lib/constants/texts.js","lib/containers/ServiceBox/ServiceBox.js","lib/containers/DndList/DndList.js","lib/containers/ManagedLoadSpecific/ManagedLoadSpecific.js","lib/pages/SettingsPage/SettingsPage.js","store/actions/settingsPage.js"],"names":["module","exports","cost","Container","block","page","box","box__load--active","box__load--inactive","box__p2p--active","box__p2p--inactive","box__balance--active","box__balance--inactive","box__header","textbox","textbox--active","textbox--inactive","item__container","item__icon","item__textfield","__webpack_require__","p","Arrow","LabelContainer","text1","text2","useStyles","makeStyles","theme","name","marginRight","width","fontFamily","typography","outlineColor","ip","display","power","cap","InputPair","_ref","first","second","onTyping","classes","react_default","a","createElement","TextField_default","value","get","InputLabelProps","shrink","margin","variant","label","onInput","event","target","className","InputProps","root","styles","endAdornment","InputAdornment_default","position","onChange","input","WhiteRadio","withStyles","color","&$checked","&:hover","backgroundColor","checked","props","Radio","Object","assign","fontSize","lineHeight","letterSpacing","RadioButtonsGroup","currentValue","radios","FormControl","component","RadioGroup","aria-label","toString","e","column","map","radio","index","toJS","FormControlLabel","key","control","disableRipple","labelPlacement","ParametersBlock","current","Fragment","Typography_default","style","fontWeight","gutterBottom","InputPair_InputPair","getIn","texts","load","header","config","settingsPage","services","service1","heading","textActive","textInactive","p2p","service2","balance","service3","StyledSwitch","switchBase","&$checked + $track","opacity","track","Switch","ServiceBox","active","_ref$render","render","onToggle","boxClasses","classNames","defineProperty","concat","textBlockClasses","DndList","items","onReorder","handlerClasses","react_beautiful_dnd_esm","onDragEnd","result","destination","newItems","list","startIndex","endIndex","replacing","splice","reorder","source","droppableId","provided","snapshot","droppableProps","ref","innerRef","item","draggableId","draggableProps","dragHandleProps","id","formName","autoComplete","notchedOutline","placeholder","ManagedLoadSpecific","DndList_DndList","alt","src","arrow","arrowTop","arrowBottom","connect","state","mainInputs","settings","currentGeneratorName","managedLoad","dispatch","onNameOrIpChange","param","type","actions","payload","onNameAndIpTyping","onGeneratorChoose","selectedValue","selectedGenerator","onParameterChange","onParameterTyping","onToggleLoad","onChangeLoad","onImportancyChange","onReorderList","onRosetteNameChange","onRosetteNameTyping","onToggleTrade","onChangeTrade","onToggleBalance","onStrategyChange","onSelectStrategy","onInitState","axios","constants","then","data","currentGenerator","find","useEffect","Typography","radioButtons","ParametersBlock_ParametersBlock","ServiceBox_ServiceBox","ManagedLoadSpecific_ManagedLoadSpecific"],"mappings":"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","file":"static/js/6.3da0a0ca.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cost\":\"InputPair_cost__2oq0A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"RadioButtonsGroup_Container__2vUfE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"SettingsPage_block__3ZA8T\",\"page\":\"SettingsPage_page__2JnI0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"ServiceBox_box__1FrWT\",\"box__load--active\":\"ServiceBox_box__load--active__gSVTd\",\"box__load--inactive\":\"ServiceBox_box__load--inactive__2K6A3\",\"box__p2p--active\":\"ServiceBox_box__p2p--active__3ECFU\",\"box__p2p--inactive\":\"ServiceBox_box__p2p--inactive__zo_VF\",\"box__balance--active\":\"ServiceBox_box__balance--active__2wNQ0\",\"box__balance--inactive\":\"ServiceBox_box__balance--inactive__2_Xwg\",\"box__header\":\"ServiceBox_box__header__FkzES\",\"textbox\":\"ServiceBox_textbox__rIG7N\",\"textbox--active\":\"ServiceBox_textbox--active__1bL5R\",\"textbox--inactive\":\"ServiceBox_textbox--inactive__25uGQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item__container\":\"DndList_item__container__tLUC2\",\"item__icon\":\"DndList_item__icon__3RH-A\",\"item__textfield\":\"DndList_item__textfield__3lUI-\"};","module.exports = __webpack_public_path__ + \"static/media/Priority.96d0eea1.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"ManagedLoadSpecific_Container__34fYe\",\"Arrow\":\"ManagedLoadSpecific_Arrow__1HjXb\",\"LabelContainer\":\"ManagedLoadSpecific_LabelContainer__3ASqv\",\"text1\":\"ManagedLoadSpecific_text1__2Sfyl\",\"text2\":\"ManagedLoadSpecific_text2__1sjrn\"};","import React from 'react';\nimport TextField from \"@material-ui/core/TextField/TextField\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport styles from './InputPair.module.scss';\nimport InputAdornment from \"@material-ui/core/InputAdornment/InputAdornment\";\n\nconst useStyles = makeStyles(theme => ({\n    name: {\n        marginRight: '32px',\n        width: '192px',\n        fontFamily: theme.typography.fontFamily,\n        outlineColor: '#0099DC'\n    },\n    ip: {\n        width: '128px',\n        fontFamily: theme.typography.fontFamily,\n        outlineColor: '#0099DC',\n        display: 'none'\n    },\n    power: {\n        marginRight: '32px',\n        width: '128px'\n    },\n    cost: {\n        width: '256px'\n    },\n    cap: {\n        width: '160px'\n    }\n}))\n\nexport const InputPair = ({ first, second, onTyping }) => {\n    const classes = useStyles();\n    return (\n        <form>\n            { <TextField\n                value={first.get('value')}\n                InputLabelProps={{\n                    shrink: true,\n                }}\n                margin='normal'\n                variant='outlined'\n                label={first.get('label')}\n                onInput={(event) => onTyping('0', event.target.value)}\n                className={classes[first.get('id')]}\n                InputProps={{classes: { root: styles['textfield-input-custom'] }, endAdornment: <InputAdornment position=\"end\">{first.get('units')}</InputAdornment>}}\n            /> }\n            { <TextField\n                value={second.get('value')}\n                InputLabelProps={{\n                    shrink: true,\n                }}\n                label={second.get('label')}\n                margin='normal'\n                variant='outlined'\n                onChange={(event) => onTyping('1', event.target.value)}\n                className={classes[second.get('id')]}\n                InputProps={{ classes: { input: styles[second.get('id')] }, endAdornment: <InputAdornment position=\"end\">{second.get('units')}</InputAdornment>}}\n            /> }\n\n        </form>\n    )\n}\n","import React from 'react';\nimport Radio from '@material-ui/core/Radio';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport styles from './RadioButtonsGroup.module.scss';\n\nconst WhiteRadio = withStyles({\n    root: {\n        color: '#FFFFFF',\n        '&$checked': {\n            color: '#FFFFFF',\n        },\n        '&:hover': {\n            backgroundColor: 'transparent'\n        }\n    },\n    checked: {}\n})(props => <Radio color=\"default\" {...props} />);\n\nconst useStyles = makeStyles(theme => ({\n    label: {\n        fontFamily: theme.typography.fontFamily,\n        fontSize: '16px',\n        lineHeight: '24px',\n        letterSpacing: '0.44px',\n    }\n}))\n\nexport default function RadioButtonsGroup({ onChange, currentValue, radios }) {\n\n    const classes = useStyles();\n\n    return (\n        <div className={styles.Container}>\n            <FormControl component=\"fieldset\">\n                <RadioGroup aria-label=\"position\"\n                            name=\"position\"\n                            value={currentValue.toString()}\n                            onChange={(e) => onChange(e.target.value)}\n                            column=\"true\">\n                    { radios.map((radio, index) => {\n                        const label = typeof radio.get('label') === 'string' ? radio.get('label') : radio.get('label').toJS();\n                        return (\n                            <FormControlLabel\n                            key={index}\n                            value={radio.get('value')}\n                            control={radio.get('color') !== 'white' ? <Radio key={index} color=\"default\" disableRipple />\n                                : <WhiteRadio key={index} disableRipple/>}\n                            label={label}\n                            labelPlacement=\"end\"\n                            className={classes.label}\n                            />\n                        )\n                    }) }\n                </RadioGroup>\n            </FormControl>\n        </div>\n    );\n}\n","import React from 'react';\nimport { InputPair } from \"../../containers/InputPair/InputPair\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\n\nexport const ParametersBlock = ({ onTyping, current }) => {\n    return (\n        <>\n            {current.get('inputTypes') && (\n                <>\n                    <Typography style={{fontWeight: 600}}\n                                variant=\"h5\"\n                                component=\"h2\"\n                                gutterBottom>\n                        {current.get('header')}\n                    </Typography>\n                    <InputPair onTyping={onTyping} first={current.getIn(['inputTypes', '0'])}\n                               second={current.getIn(['inputTypes', '1'])}/>\n                </>\n            )}\n\n        </>\n    )\n}\n","import {config} from \"../../loc/current/config\";\n\nexport const texts = {\n    load: {\n        header: config.settingsPage.services.service1.heading,\n        textActive: config.settingsPage.services.service1.textActive,\n        textInactive: config.settingsPage.services.service1.textInactive,\n    },\n    p2p: {\n        header: config.settingsPage.services.service2.heading,\n        textActive: config.settingsPage.services.service2.textActive,\n        textInactive: config.settingsPage.services.service2.textInactive\n    },\n    balance: {\n        header: config.settingsPage.services.service3.heading,\n        textActive: config.settingsPage.services.service3.textActive,\n        textInactive: config.settingsPage.services.service3.textInactive\n    }\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Switch from \"@material-ui/core/Switch/Switch\";\nimport { texts } from '../../constants/texts'\nimport styles from './ServiceBox.module.scss'\n\nconst StyledSwitch = withStyles({\n    switchBase: {\n        backgroundColor: 'transparent !important',\n        '&$checked': {\n            color: '#FFF',\n        },\n        '&$checked + $track': {\n            backgroundColor: '#FFF',\n            opacity: 0.25\n        }\n    },\n    checked: {},\n    track: { backgroundColor: 'rgba(34, 31, 31, 0.26)', opacity: 1 },\n})(Switch);\n\nexport const ServiceBox = ({ variant, active, render = null, onToggle }) => {\n\n    const boxClasses = classNames(\n        {[styles[`box__${variant}--active`]]: active === true},\n        {[styles[`box__${variant}--inactive`]]: active === false},\n        styles[`box__${variant}`],\n        styles['box']\n    );\n\n    const textBlockClasses = classNames(\n        {[styles[`textbox--active`]]: active === true},\n        {[styles[`textbox--inactive`]]: active === false},\n        styles['textbox']\n    )\n\n    return (\n        <>\n            { variant &&\n                <div className={boxClasses}>\n                    <div className={ styles[`box__header`] }>\n                        <StyledSwitch checked={ active }\n                                      onChange={ () => onToggle(!active) }\n                                      disableRipple/>\n                        <Typography style={{ fontWeight: 500, color: '#FFF' }}\n                                    variant=\"h5\"\n                                    component=\"h2\"\n                                    >\n                            { texts[variant].header }\n                        </Typography>\n                    </div>\n                    <div className={textBlockClasses}>\n                        <Typography variant=\"body2\">\n                            { texts[variant][`text${active ? 'Active' : 'Inactive'}`]}\n                        </Typography>\n                    </div>\n                    { variant === 'load' && active && render() }\n                    { variant === 'p2p' && active && render() }\n                </div>\n             }\n        </>\n    )\n}\n","import React from \"react\";\nimport classNames from 'classnames';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport TextField from \"@material-ui/core/TextField/TextField\";\n\nimport styles from \"./DndList.module.scss\";\nimport {config} from \"../../../loc/current/config\";\n\nconst reorder = (list, startIndex, endIndex) => {\n    const replacing = list.get(startIndex);\n    const removed = list.splice(startIndex, 1);\n\n    return removed.splice(endIndex, 0, replacing);\n};\n\nexport const DndList = ({ items, onReorder, onChange }) => {\n\n    const handlerClasses = classNames(\n        \"material-icons\",\n        styles['item__icon']\n    );\n\n    const onDragEnd = result => {\n        if (!result.destination) {\n            return;\n        }\n        const newItems = reorder(\n            items,\n            result.source.index,\n            result.destination.index\n        );\n        onReorder(newItems);\n    };\n\n    return (\n        <DragDropContext onDragEnd={onDragEnd}>\n            <Droppable droppableId=\"droppable\">\n                {(provided, snapshot) => (\n                    <div\n                        {...provided.droppableProps}\n                        ref={provided.innerRef}\n                    >\n                        {items.map((item, index) => (\n                            <Draggable key={item.get('id')}\n                                        draggableId={item.get('id')}\n                                        index={index}>\n                                {(provided, snapshot) => (\n                                    <div className={styles['item__container']} ref={provided.innerRef} {...provided.draggableProps}>\n                                        <i className={handlerClasses} {...provided.dragHandleProps}>drag_indicator</i>\n                                        <TextField\n                                            id={item.get('id')}\n                                            label={`${config.settingsPage.services.service1.formName} №${item.get('id')}`}\n                                            margin='normal'\n                                            variant='outlined'\n                                            value={item.get('name')}\n                                            autoComplete='off'\n                                            onChange={(e) => onChange(item.get('id'), e.target.value)}\n                                            className={styles['item__textfield']}\n                                            InputProps={{ classes: {notchedOutline: styles['item__textfield'],\n                                                    root: styles['item__textfield']} }}\n                                            InputLabelProps={{ classes: { root: styles['item__textfield'] }, shrink: true }}\n                                        />\n                                    </div>\n                                )}\n                            </Draggable>\n                        ))}\n                        {provided.placeholder}\n                    </div>\n                )}\n            </Droppable>\n        </DragDropContext>\n    );\n};\n","import React from 'react';\nimport {DndList} from \"../DndList/DndList\";\nimport arrow from '../../components/Icon/icons/Priority.svg'\n\nimport styles from './ManagedLoadSpecific.module.scss'\nimport {config} from \"../../../loc/current/config\";\n\nexport const ManagedLoadSpecific = ({ items, onReorder, onChange }) => {\n\n    return (\n        <div className={styles['Container']}>\n            <DndList items={items}\n                     onReorder={onReorder}\n                     onChange={onChange}/>\n            <img alt={''} src={arrow} className={styles.Arrow}/>\n            <div className={styles['LabelContainer']}>\n                <div className={styles['text1']}>{config.settingsPage.services.service1.arrowTop.label}</div>\n                <div className={styles['text2']}>{config.settingsPage.services.service1.arrowBottom.label}</div>\n            </div>\n        </div>\n    )\n}\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Typography from '@material-ui/core/Typography';\nimport { InputPair } from \"../../containers/InputPair/InputPair\";\nimport RadioButtonsGroup from '../../containers/RadioButtonsGroup/RadioButtonsGroup'\n\nimport styles from './SettingsPage.module.scss'\nimport { ParametersBlock }from \"../../containers/ParametersBlock/ParametersBlock\";\nimport { ServiceBox } from \"../../containers/ServiceBox/ServiceBox\";\nimport {\n    onGeneratorSelect,\n    onParameterTyping,\n    onNameAndIpTyping,\n    onSelectStrategy,\n    onChangeBalance,\n    onChangeTrade,\n    onChangeLoad,\n    onReorderList,\n    onRosetteNameTyping,\n    onInit\n} from \"../../../store/actions/settingsPage\";\nimport { ManagedLoadSpecific } from \"../../containers/ManagedLoadSpecific/ManagedLoadSpecific\";\nimport { config } from \"../../../loc/current/config\";\n\nconst SettingsPage = (\n    { currentGeneratorName,\n        radios,\n        onGeneratorChoose,\n        onParameterChange,\n        mainInputs,\n        onNameOrIpChange,\n        p2p,\n        onStrategyChange,\n        managedLoad,\n        balance,\n        onToggleTrade,\n        onToggleBalance,\n        onToggleLoad,\n        onImportancyChange,\n        onRosetteNameChange,\n        onInitState}) => {\n    const currentGenerator = radios.find(radio => radio.get('value') === currentGeneratorName);\n    useEffect(() => onInitState(), []);\n    return (\n        <div className={styles.page}>\n            <div className={styles.block}>\n                <Typography style={{fontWeight: 600}}\n                            variant=\"h4\"\n                            gutterBottom>\n                    {config.settingsPage.heading.label}\n                </Typography>\n                <InputPair first={mainInputs.get(0)}\n                           second={mainInputs.get(1)}\n                           onTyping={onNameOrIpChange}/>\n            </div>\n            <div className={styles.block}>\n                <Typography style={{fontWeight: 600}}\n                            variant=\"h5\"\n                            gutterBottom>\n                    {config.settingsPage.radioButtons.heading.label}\n                </Typography>\n                <RadioButtonsGroup radios={radios}\n                                   currentValue={currentGeneratorName}\n                                   onChange={onGeneratorChoose} />\n            </div>\n           { currentGeneratorName !== 'absent' &&\n           <div className={styles.block}>\n                <ParametersBlock onTyping={onParameterChange}\n                                 current={currentGenerator}/>\n            </div> }\n            <div className={styles.block}>\n                <Typography style={{fontWeight: 600}}\n                            variant=\"h5\"\n                            component=\"h2\"\n                            gutterBottom>\n                    {config.settingsPage.services.heading.label}\n                </Typography>\n                <ServiceBox variant='load'\n                            active={managedLoad.get('status')}\n                            onToggle={onToggleLoad}\n                            render={() => <ManagedLoadSpecific items={managedLoad.get('items')}\n                                                               onReorder={onImportancyChange}\n                                                               onChange={onRosetteNameChange}/> }/>\n                <ServiceBox variant='p2p'\n                            active={p2p.get('status')}\n                            render={() => <RadioButtonsGroup onChange={onStrategyChange}\n                                                             currentValue={p2p.get('current')}\n                                                             radios={p2p.get('strategies')} />}\n                            onToggle={onToggleTrade}/>\n                <ServiceBox variant='balance'\n                            active={balance.get('status')}\n                            onToggle={onToggleBalance}/>\n            </div>\n        </div>\n    )\n};\n\nconst mapStateToProps = state => {\n    return ({\n        mainInputs: state.settings.get('mains'),\n        currentGeneratorName: state.settings.get('currentGeneratorName'),\n        radios: state.settings.get('radios'),\n        managedLoad: state.settings.get('managedLoad'),\n        p2p: state.settings.get('p2p'),\n        balance: state.settings.get('balance')\n    })\n};\n\nconst mapDispatchToProps = dispatch => {\n    return ({\n        onNameOrIpChange: (param, value) => dispatch(onNameAndIpTyping(param, value)),\n        onGeneratorChoose: (value) => dispatch(onGeneratorSelect(value)),\n        onParameterChange: (param, value) => dispatch(onParameterTyping(param, value)),\n        onToggleLoad: (value) => dispatch(onChangeLoad(value)),\n        onImportancyChange: items => dispatch(onReorderList(items)),\n        onRosetteNameChange: (index, value) => dispatch(onRosetteNameTyping(index, value)),\n        onToggleTrade: value => dispatch(onChangeTrade(value)),\n        onToggleBalance: value => dispatch(onChangeBalance(value)),\n        onStrategyChange: value => dispatch(onSelectStrategy(value)),\n        onInitState: () => dispatch(onInit())\n    })\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingsPage);\n","import * as actions from './actionTypes';\nimport * as constants from '../../lib/constants/endpoints';\nimport axios from 'axios';\n\nexport const onGeneratorSelect = selectedValue => {\n    return {\n      type: actions.SELECT_RADIO,\n      selectedGenerator: selectedValue\n    }\n};\n\nexport const onParameterTyping = (param, value) => {\n  return {\n    type: actions.CHANGE_PARAMETER_VALUE,\n    payload: { param, value }\n  }\n};\n\nexport const onNameAndIpTyping = (param, value) => {\n  return {\n    type: actions.TYPE_INFO,\n    payload: { param, value }\n  }\n}\n\nexport const onSelectStrategy = value => {\n  return {\n    type: actions.SELECT_STRATEGY,\n      value\n  }\n};\n\nexport const onChangeTrade = value => {\n  return {\n    type: actions.TOGGLE_TRADE,\n      value\n  }\n}\n\nexport const onChangeLoad = value => {\n    return {\n        type: actions.TOGGLE_LOAD,\n        value\n    }\n}\n\nexport const onChangeBalance = value => {\n    // disable for some time\n    return {\n        type: actions.TOGGLE_BALANCE,\n        value: false\n    }\n}\n\nexport const onReorderList = items => {\n    return {\n        type: actions.CHANGE_IMPORTANCY,\n        items\n    }\n}\n\nexport const onRosetteNameTyping = (id, value) => {\n    return {\n        type: actions.CHANGE_ROSETTE_NAME,\n        payload: { id, value }\n    }\n};\n\nexport const onInit = () => {\n    return dispatch => {\n        axios.get(constants.BACKEND_SERVER_SETTINGS)\n            .then(({data}) => {\n                dispatch({type: actions.SETTINGS_PAGE_FETCH_DATA, payload: data})\n            })\n    }\n}\n"],"sourceRoot":""}